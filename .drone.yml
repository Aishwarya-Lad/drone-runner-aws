kind: pipeline
type: docker
name: unit tests

platform:
  os: linux
  arch: amd64

steps:
- name: go vet and unit tests
  image: golang:1.16
  commands:
    - go vet ./...
    - go test -cover ./...
  depends_on:
    - clone
- name: golangci-lint
  image: golangci/golangci-lint
  commands:
    - golangci-lint run --timeout 300s
  depends_on:
    - clone
---

kind: pipeline
type: docker
name: build and publish container

platform:
  os: linux
  arch: amd64

steps:
  - name: build
    image: golang:1.16
    commands:
    - sh scripts/build.sh
  - name: publish
    image: plugins/docker
    pull: if-not-exists
    settings:
      repo: drone/drone-runner-aws
      auto_tag: true
      dockerfile: docker/Dockerfile.linux.amd64
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      ref:
      - refs/tags/*

volumes:
- name: go
  temp: {}

trigger:
  branch:
  - release
  depends_on:
  - ubuntu instance acceptance tests
  - windows instance acceptance tests

---
kind: pipeline
type: aws
name: ubuntu instance acceptance tests

instance:
  use: ubuntu

steps:
  - name: check install
    commands:
      - cat /var/log/cloud-init-output.log
  - name: build binary with golang image
    image: golang:1.16
    commands:
      - GOPATH="" CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o release/linux/amd64/drone-runner-aws
  - name: plugin
    image: plugins/docker
    settings:
      dry_run: true
      repo: foo/bar
      tags: latest
      dockerfile: docker/Dockerfile.linux.amd64
    volumes:
      - name: cache
        path: /go
  - name: docker status
    commands:
      - docker ps -a
  - name: ping
    image: redis
    commands:
      - redis-cli -h red ping

services:
  - name: red
    image: redis

volumes:
- name: cache
  temp: {}

depends_on:
- unit tests

---
kind: pipeline
type: aws
name: windows instance acceptance tests

instance:
  use: windows

platform:
  os: windows

steps:
  - name: check install
    commands:
      - type C:\ProgramData\Amazon\EC2-Windows\Launch\Log\UserdataExecution.log
  - name: imagey + commands
    image: golang:1.16.5-windowsservercore-1809
    commands:
      - go version
      - go help
      - dir c:/
      - dir c:/volumes
    volumes:
      - name: cache
        path: c:/volumes
  - name: docker status
    commands:
      - docker ps -a
  - name: ping service sleepyserver
    image: golang:1.16.5-windowsservercore-1809
    commands:
      - ping sleepyserver

volumes:
- name: cache
  temp: {}

services:
  - name: sleepyserver
    image: golang:1.16.5-windowsservercore-1809
    commands:
      - powershell Start-Sleep -s 1800

depends_on:
- unit tests
